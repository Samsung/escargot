CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

#######################################################
# CONFIGURATION
#######################################################
IF (EXISTS "${PROJECT_SOURCE_DIR}/build/cmake/toolchain_${ESCARGOT_HOST}_${ESCARGOT_ARCH}.cmake")
    INCLUDE ("${PROJECT_SOURCE_DIR}/build/cmake/toolchain_${ESCARGOT_HOST}_${ESCARGOT_ARCH}.cmake")
ELSE()
    MESSAGE (FATAL_ERROR "Error: unsupported target")
ENDIF()

#######################################################
# PATH
#######################################################
SET (ESCARGOT_ROOT ${PROJECT_SOURCE_DIR})
SET (ESCARGOT_THIRD_PARTY_ROOT ${ESCARGOT_ROOT}/third_party)
SET (GCUTIL_ROOT ${ESCARGOT_THIRD_PARTY_ROOT}/GCutil)

SET (ESCARGOT_OUTDIR ${ESCARGOT_ROOT}/out/${ESCARGOT_HOST}/${ESCARGOT_ARCH}/${ESCARGOT_TYPE}/${ESCARGOT_MODE})

IF (ESCARGOT_OUTPUT STREQUAL "bin")
    SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${ESCARGOT_OUTDIR}/)
    SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${ESCARGOT_OUTDIR}/lib)
    SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${ESCARGOT_OUTDIR}/lib)
ENDIF()


#######################################################
# FLAGS FOR COMMON
#######################################################
# ESCARGOT COMMON CXXFLAGS
SET (ESCARGOT_DEFINITIONS
    ${ESCARGOT_DEFINITIONS}
    -DESCARGOT
    -DESCARGOT_ENABLE_TYPEDARRAY
    -DESCARGOT_ENABLE_PROMISE
    -DESCARGOT_ENABLE_PROXY_REFLECT
)

IF (ESCARGOT_ENABLE_ES2015 OR NOT DEFINED ESCARGOT_ENABLE_ES2015)
    SET (ESCARGOT_DEFINITIONS ${ESCARGOT_DEFINITIONS} -DESCARGOT_ENABLE_ES2015)
ENDIF()

SET (CXXFLAGS_FROM_ENV $ENV{CXXFLAGS})
SEPARATE_ARGUMENTS(CXXFLAGS_FROM_ENV)
SET (ESCARGOT_CXXFLAGS
    ${CXXFLAGS_FROM_ENV}
    ${ESCARGOT_CXXFLAGS}
    -std=c++11 -g3
    -fno-math-errno
    -fdata-sections -ffunction-sections
    -fno-omit-frame-pointer
    -fvisibility=hidden
    -Wno-unused-parameter
    -Wno-type-limits -Wno-unused-result -Wno-unused-variable -Wno-invalid-offsetof
    -Wno-deprecated-declarations
    -Wno-implicit-fallthrough
)

IF (${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
    SET (ESCARGOT_CXXFLAGS ${ESCARGOT_CXXFLAGS} -frounding-math -fsignaling-nans -Wno-unused-but-set-variable -Wno-unused-but-set-parameter)
ELSEIF (${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
    SET (ESCARGOT_CXXFLAGS ${ESCARGOT_CXXFLAGS} -fno-fast-math -fno-unsafe-math-optimizations -fdenormal-fp-math=ieee -Wno-parentheses-equality -Wno-dynamic-class-memaccess -Wno-deprecated-register -Wno-expansion-to-defined -Wno-return-type)
ELSE()
    MESSAGE (FATAL_ERROR ${CMAKE_CXX_COMPILER_ID} " is Unsupported Compiler")
ENDIF()


# ESCARGOT COMMON LDFLAGS
SET (ESCARGOT_LDFLAGS ${ESCARGOT_LDFLAGS} -fvisibility=hidden)

IF (${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
    SET (ESCARGOT_LDFLAGS ${ESCARGOT_LDFLAGS})
ELSEIF (${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
    SET (ESCARGOT_LDFLAGS ${ESCARGOT_LDFLAGS})
ELSE()
    MESSAGE (FATAL_ERROR ${CMAKE_CXX_COMPILER_ID} " is Unsupported Compiler")
ENDIF()



# bdwgc
IF (${ESCARGOT_MODE} STREQUAL "debug")
    SET (ESCARGOT_DEFINITIONS_COMMON ${ESCARGOT_DEFINITIONS_COMMON} -DGC_DEBUG)
ENDIF()

#######################################################
# FLAGS FOR $(ESCARGOT_HOST)
#######################################################

IF (${ESCARGOT_OUTPUT} STREQUAL "shared_lib" AND ${ESCARGOT_HOST} STREQUAL "android")
    SET (ESCARGOT_LDFLAGS ${ESCARGOT_LDFLAGS} -shared)
ENDIF()

IF (NOT DEFINED ESCARGOT_LIBICU_SUPPORT)
    SET (ESCARGOT_LIBICU_SUPPORT ON)
ENDIF()

IF (${ESCARGOT_HOST} STREQUAL "android")
    SET (ESCARGOT_LIBICU_SUPPORT OFF)
ENDIF()

FIND_PACKAGE (PkgConfig REQUIRED)
IF (${ESCARGOT_LIBICU_SUPPORT} STREQUAL "ON")
    PKG_CHECK_MODULES (ICUI18N REQUIRED icu-i18n)
    PKG_CHECK_MODULES (ICUUC REQUIRED icu-uc)
    SET (ESCARGOT_DEFINITIONS ${ESCARGOT_DEFINITIONS} -DENABLE_ICU)
    IF (${ESCARGOT_HOST} STREQUAL "darwin")
        FOREACH (ICU_LDFLAG ${ICUI18N_LDFLAGS} ${ICUUC_LDFLAGS})
            SET (ESCARGOT_LDFLAGS ${ESCARGOT_LDFLAGS} ${ICU_LDFLAG})
        ENDFOREACH()
    ELSE()
        SET (ESCARGOT_LIBRARIES ${ESCARGOT_LIBRARIES} ${ICUI18N_LIBRARIES} ${ICUUC_LIBRARIES})
    ENDIF()
    SET (ESCARGOT_INCDIRS ${ESCARGOT_INCDIRS} ${ICUI18N_INCLUDE_DIRS} ${ICUUC_INCLUDE_DIRS})
    SET (ESCARGOT_CXXFLAGS ${ESCARGOT_CXXFLAGS} ${ICUI18N_CFLAGS_OTHER} ${ICUUC_CFLAGS_OTHER})
ENDIF()

IF (${ESCARGOT_HOST} STREQUAL "tizen_obs")
    PKG_CHECK_MODULES (DLOG REQUIRED dlog)
    SET (ESCARGOT_LIBRARIES ${ESCARGOT_LIBRARIES} ${DLOG_LIBRARIES})
    SET (ESCARGOT_INCDIRS ${ESCARGOT_INCDIRS} ${DLOG_INCLUDE_DIRS})
    SET (ESCARGOT_CXXFLAGS ${ESCARGOT_CXXFLAGS} ${DLOG_CFLAGS_OTHER})
ENDIF()

#######################################################
# flags for $(MODE) : debug/release
#######################################################
# DEBUG FLAGS
SET (ESCARGOT_CXXFLAGS_DEBUG -O0 -Wall -Wextra -Werror ${ESCARGOT_CXXFLAGS_DEBUG})
SET (ESCARGOT_DEFINITIONS_DEBUG -D_GLIBCXX_DEBUG -DGC_DEBUG)


# RELEASE FLAGS
SET (ESCARGOT_CXXFLAGS_RELEASE -O2 -fno-stack-protector ${ESCARGOT_CXXFLAGS_RELEASE})
SET (ESCARGOT_DEFINITIONS_RELEASE -DNDEBUG)


#######################################################
# FLAGS FOR $(ESCARGOT_OUTPUT) : bin/shared_lib/static_lib
#######################################################
SET (ESCARGOT_DEFINITIONS_BIN -DESCARGOT_STANDALONE -DESCARGOT_SHELL)


# SHARED_LIB FLAGS
SET (ESCARGOT_CXXFLAGS_SHAREDLIB -fPIC)
SET (ESCARGOT_LDFLAGS_SHAREDLIB -ldl)


# STATIC_LIB FLAGS
SET (ESCARGOT_CXXFLAGS_STATICLIB -fPIC)
SET (ESCARGOT_LDFLAGS_STATICLIB -Wl,--gc-sections)


#######################################################
# FLAGS FOR TEST
#######################################################
SET (ESCARGOT_DEFINITIONS_VENDORTEST -DESCARGOT_ENABLE_VENDORTEST)


#######################################################
# FLAGS FOR MEMORY PROFILING
#######################################################
SET (PROFILER_FLAGS)

IF (ESCARGOT_PROFILE_BDWGC)
    SET (PROFILER_FLAGS ${PROFILER_FLAGS} -DPROFILE_BDWGC)
ENDIF()

IF (ESCARGOT_MEM_STATS)
    SET (PROFILER_FLAGS ${PROFILER_FLAGS} -DESCARGOT_MEM_STATS)
ENDIF()

IF (ESCARGOT_VALGRIND)
    SET (PROFILER_FLAGS ${PROFILER_FLAGS} -DESCARGOT_VALGRIND)
ENDIF()

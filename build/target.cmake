# default set of each flag
SET (ESCARGOT_CXXFLAGS -fno-rtti) # build escargot without rtti
SET (ESCARGOT_CXXFLAGS_DEBUG -O0)
SET (ESCARGOT_CXXFLAGS_RELEASE -O2)
SET (ESCARGOT_LDFLAGS)
SET (ESCARGOT_DEFINITIONS)
SET (ESCARGOT_THIRDPARTY_CFLAGS -fdata-sections -ffunction-sections -fno-omit-frame-pointer)

SET (ESCARGOT_BUILD_32BIT OFF)
SET (ESCARGOT_BUILD_64BIT OFF)
SET (ESCARGOT_BUILD_64BIT_LARGE OFF)

IF (${ESCARGOT_HOST} STREQUAL "linux")
    IF (ESCARGOT_THREADING)
        SET (ESCARGOT_LIBRARIES ${ESCARGOT_LIBRARIES} atomic)
    ENDIF()
    # default set of LDFLAGS
    SET (ESCARGOT_LDFLAGS -lpthread -lrt -Wl,--gc-sections)
    IF ((${ESCARGOT_ARCH} STREQUAL "x64") OR (${ESCARGOT_ARCH} STREQUAL "x86_64"))
        SET (ESCARGOT_BUILD_64BIT ON)
    ELSEIF ((${ESCARGOT_ARCH} STREQUAL "x86") OR (${ESCARGOT_ARCH} STREQUAL "i686"))
        SET (ESCARGOT_BUILD_32BIT ON)
        SET (ESCARGOT_CXXFLAGS ${ESCARGOT_CXXFLAGS} -m32 -mfpmath=sse -msse -msse2)
        SET (ESCARGOT_LDFLAGS ${ESCARGOT_LDFLAGS} -m32)
        SET (ESCARGOT_THIRDPARTY_CFLAGS ${ESCARGOT_THIRDPARTY_CFLAGS} -m32)
    ELSEIF (${ESCARGOT_ARCH} STREQUAL "arm")
        SET (ESCARGOT_BUILD_32BIT ON)
    ELSEIF (${ESCARGOT_ARCH} STREQUAL "aarch64")
        SET (ESCARGOT_BUILD_64BIT ON)
    ELSE()
        MESSAGE (FATAL_ERROR ${ESCARGOT_ARCH} " is unsupported")
    ENDIF()
ELSEIF (${ESCARGOT_HOST} STREQUAL "tizen_obs")
    # default set of LDFLAGS
    SET (ESCARGOT_LDFLAGS -lpthread -lrt -Wl,--gc-sections)
    IF (ESCARGOT_THREADING)
        SET (ESCARGOT_LIBRARIES ${ESCARGOT_LIBRARIES} atomic)
    ENDIF()
    SET (ESCARGOT_DEFINITIONS -DESCARGOT_TIZEN)
    IF ((${ESCARGOT_ARCH} STREQUAL "x64") OR (${ESCARGOT_ARCH} STREQUAL "x86_64"))
        SET (ESCARGOT_BUILD_64BIT ON)
    ELSEIF ((${ESCARGOT_ARCH} STREQUAL "x86") OR (${ESCARGOT_ARCH} STREQUAL "i686"))
        SET (ESCARGOT_BUILD_32BIT ON)
        SET (ESCARGOT_CXXFLAGS ${ESCARGOT_CXXFLAGS} -m32 -mfpmath=sse -msse -msse2)
        SET (ESCARGOT_LDFLAGS ${ESCARGOT_LDFLAGS} -m32)
        SET (ESCARGOT_THIRDPARTY_CFLAGS ${ESCARGOT_THIRDPARTY_CFLAGS} -m32)
    ELSEIF (${ESCARGOT_ARCH} STREQUAL "arm")
        SET (ESCARGOT_BUILD_32BIT ON)
        SET (ESCARGOT_CXXFLAGS_DEBUG -O1)
        SET (ESCARGOT_CXXFLAGS_RELEASE -O2)
    ELSEIF (${ESCARGOT_ARCH} STREQUAL "aarch64")
        SET (ESCARGOT_BUILD_64BIT_LARGE ON)
    ELSE()
        MESSAGE (FATAL_ERROR ${ESCARGOT_ARCH} " is unsupported")
    ENDIF()
ELSEIF (${ESCARGOT_HOST} STREQUAL "android")
    IF (ESCARGOT_THREADING)
        SET (ESCARGOT_LIBRARIES ${ESCARGOT_LIBRARIES} atomic)
    ENDIF()
    SET (ESCARGOT_DEFINITIONS -DANDROID=1 -DESCARGOT_ANDROID=1)
    SET (ESCARGOT_THIRDPARTY_CFLAGS ${ESCARGOT_THIRDPARTY_CFLAGS} -mstackrealign)
    SET (ESCARGOT_CXXFLAGS ${ESCARGOT_CXXFLAGS} -mstackrealign)
    IF (${ESCARGOT_ARCH} STREQUAL "arm")
        SET (ESCARGOT_BUILD_32BIT ON)
        SET (ESCARGOT_LDFLAGS -fPIE -pie -march=armv7-a -Wl,--fix-cortex-a8 -llog -Wl,--gc-sections)
    ELSEIF ((${ESCARGOT_ARCH} STREQUAL "arm64") OR (${ESCARGOT_ARCH} STREQUAL "aarch64"))
        SET (ESCARGOT_BUILD_64BIT ON)
        SET (ESCARGOT_LDFLAGS -fPIE -pie -llog -Wl,--gc-sections)
    ELSEIF (${ESCARGOT_ARCH} STREQUAL "x86")
        SET (ESCARGOT_BUILD_32BIT ON)
        SET (ESCARGOT_CXXFLAGS ${ESCARGOT_CXXFLAGS} -m32 -mfpmath=sse -msse -msse2  -mstackrealign)
        SET (ESCARGOT_LDFLAGS -fPIE -pie -llog -Wl,--gc-sections -m32)
    ELSEIF (${ESCARGOT_ARCH} STREQUAL "x86_64")
        SET (ESCARGOT_BUILD_64BIT ON)
        SET (ESCARGOT_LDFLAGS -fPIE -pie -llog -Wl,--gc-sections)
        # bdwgc android amd64 cannot support keeping back ptrs
        SET (ESCARGOT_THIRDPARTY_CFLAGS ${ESCARGOT_THIRDPARTY_CFLAGS} -UKEEP_BACK_PTRS -USAVE_CALL_COUNT -UDBG_HDRS_ALL)
    ENDIF()
ELSEIF (${ESCARGOT_HOST} STREQUAL "darwin" AND ${ESCARGOT_ARCH} STREQUAL "x64")
    SET (ESCARGOT_LDFLAGS -lpthread -Wl,-dead_strip)
    SET (ESCARGOT_BUILD_64BIT_LARGE ON)
    # bdwgc mac cannot support pthread_getattr_np
    SET (ESCARGOT_THIRDPARTY_CFLAGS ${ESCARGOT_THIRDPARTY_CFLAGS} -UHAVE_PTHREAD_GETATTR_NP)
ELSE()
    MESSAGE (FATAL_ERROR ${ESCARGOT_HOST} " with " ${ESCARGOT_ARCH} " is unsupported")
ENDIF()

IF (ESCARGOT_BUILD_32BIT)
    # 32bit build
    SET (ESCARGOT_DEFINITIONS ${ESCARGOT_DEFINITIONS} -DESCARGOT_32=1)
ELSEIF ((ESCARGOT_BUILD_64BIT_LARGE) OR (ESCARGOT_BUILD_64BIT AND ESCARGOT_BUILD_64BIT_FORCE_LARGE))
    # 64bit build(large)
    SET (ESCARGOT_DEFINITIONS ${ESCARGOT_DEFINITIONS} -DESCARGOT_64=1)
ELSEIF (ESCARGOT_BUILD_64BIT)
    # 64bit build
    SET (ESCARGOT_DEFINITIONS ${ESCARGOT_DEFINITIONS} -DESCARGOT_64=1 -DESCARGOT_USE_32BIT_IN_64BIT)
    SET (ESCARGOT_THIRDPARTY_CFLAGS ${ESCARGOT_THIRDPARTY_CFLAGS} -DESCARGOT_USE_32BIT_IN_64BIT)
ELSE()
    MESSAGE (FATAL_ERROR "unsupported mode")
ENDIF()

sudo: required
language: cpp
compiler:
  - gcc

before_install:
  - sudo apt-get install -y autoconf automake libtool ninja-build

matrix:
  include:
    - name: "check"
      before_install: # skip installation of common build dependencies (not needed for checks)
        - sudo apt-get install -y clang-format-3.8
      script:
        - python tools/check_tidy.py

    - name: "x64.release"
      install:
        - sudo apt-get install -y libicu-dev
      script:
        - cmake -H. -Bout/linux/x64/release -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x64 -DESCARGOT_MODE=release -DESCARGOT_OUTPUT=bin -GNinja
        - ninja -Cout/linux/x64/release
        - cp ./out/linux/x64/release/escargot ./escargot
        - travis_wait tools/run-tests.py --arch=x86_64 jetstream-only-simple
        - tools/run-tests.py --arch=x86_64 jetstream-only-cdjs sunspider-js test262 internal octane chakracore jsc-stress

    - name: "x64.debug"
      install:
        - sudo apt-get install -y libicu-dev
      script:
        - cmake -H. -Bout/linux/x64/debug -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x64 -DESCARGOT_MODE=debug -DESCARGOT_OUTPUT=bin -GNinja
        - ninja -Cout/linux/x64/debug
        - cp ./out/linux/x64/debug/escargot ./escargot
        - tools/run-tests.py --arch=x86_64 jetstream-only-cdjs sunspider-js test262 internal

    - name: "x86.release"
      install:
        - sudo apt-get install -y gcc-multilib g++-multilib
        - "sudo apt-get install -y libicu-dev:i386"
      script:
        - cmake -H. -Bout/linux/x86/release -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x86 -DESCARGOT_MODE=release -DESCARGOT_OUTPUT=bin -GNinja
        - ninja -Cout/linux/x86/release
        - cp ./out/linux/x86/release/escargot ./escargot
        - travis_wait tools/run-tests.py --arch=x86 jetstream-only-simple
        - tools/run-tests.py --arch=x86 jetstream-only-cdjs sunspider-js test262 internal octane chakracore jsc-stress

    - name: "x86.debug"
      install:
        - sudo apt-get install -y gcc-multilib g++-multilib
        - "sudo apt-get install -y libicu-dev:i386"
      script:
        - cmake -H. -Bout/linux/x86/debug -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x86 -DESCARGOT_MODE=debug -DESCARGOT_OUTPUT=bin -GNinja
        - ninja -Cout/linux/x86/debug
        - cp ./out/linux/x86/debug/escargot ./escargot
        - tools/run-tests.py --arch=x86 jetstream-only-cdjs sunspider-js test262 internal

    - name: "x64.release (-DVENDORTEST=1)"
      install:
        - sudo apt-get install -y libicu-dev
        - sudo apt-get install -y npm
        - npm install
      script:
        - cmake -H. -Bout/linux/x64/release -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x64 -DESCARGOT_MODE=release -DESCARGOT_OUTPUT=bin -DVENDORTEST=1 -GNinja
        - ninja -Cout/linux/x64/release
        - cp ./out/linux/x64/release/escargot ./escargot
        - tools/run-tests.py --arch=x86_64 v8 spidermonkey

    - name: "x86.release (-DVENDORTEST=1)"
      install:
        - sudo apt-get install -y gcc-multilib g++-multilib
        - "sudo apt-get install -y libicu-dev:i386"
        - sudo apt-get install -y npm
        - npm install
      script:
        - cmake -H. -Bout/linux/x86/release -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x86 -DESCARGOT_MODE=release -DESCARGOT_OUTPUT=bin -DVENDORTEST=1 -GNinja
        - ninja -Cout/linux/x86/release
        - cp ./out/linux/x86/release/escargot ./escargot
        - tools/run-tests.py --arch=x86 v8 spidermonkey

    - name: "SonarQube"
      addons:
        sonarcloud:
          organization: "pando-project"
      cache:
        directories:
          - '$HOME/.sonar/cache'
      install:
        - sudo apt-get install -y libicu-dev
      script:
        - ./tools/check_sonarqube.sh

  allow_failures:
    - name: "SonarQube"

# fast_finish: true

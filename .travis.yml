language: cpp
compiler:
  - gcc

matrix:
  include:
    - name: "check"
      addons:
        apt:
          packages: [ clang-format-3.9 ]
      script:
        - python tools/check_tidy.py

    - name: "darwin.x64.release"
      os: osx
      addons:
        homebrew:
          update: true
          packages: [ autoconf, automake, cmake, libtool, ninja, pkg-config, icu4c ]
      install:
        - npm install
      env:
        - PKG_CONFIG_PATH=/usr/local/opt/icu4c/lib/pkgconfig
      script:
        - cmake -H. -Bout/darwin/x64/release -DESCARGOT_HOST=darwin -DESCARGOT_ARCH=x64 -DESCARGOT_MODE=release -DESCARGOT_OUTPUT=bin -DVENDORTEST=1 -GNinja
        - ninja -Cout/darwin/x64/release
        - cp ./out/darwin/x64/release/escargot ./escargot
        - tools/run-tests.py --arch=x86_64 jetstream-only-cdjs sunspider-js internal jsc-stress regression-tests v8 es2015 intl
        - tools/run-tests.py test262
        # FIXME: jetstream-only-simple and octane takes too long running time on darwin
        # jetstream-only-simple and octane are skipped now.
        # - travis_wait 40 tools/run-tests.py --arch=x86_64 jetstream-only-simple octane
        # FIXME: chakracore fails on darwin
        # ChakraCore's test runner uses `readlink -f` to determine the test root directory.
        # However, `readlink` has no `-f` option on macOS.
        # FIXME: spidermonkey fails on darwin
        # SpiderMonkey's ecma/String/15.5.4.12-3.js tests String.prototype.toUpperCase(),
        # which relies on ICU. Recent ICU versions (installed on macOS) support Unicode 11.0,
        # which returns upper case letters from the Gregorian Extended block (0x1C90-0x1CBF)
        # for Gregorian letters (0x10D0-0x10FF). Unfortunately, the test case expects
        # Unicode 1.0 compatible(?) behaviour, i.e., to return letters unmodified.

    - name: "linux.x64.release"
      addons:
        apt:
          packages: [ autoconf, automake, libtool, ninja-build, libicu-dev, npm ]
      install:
        - npm install
      script:
        - cmake -H. -Bout/linux/x64/release -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x64 -DESCARGOT_MODE=release -DESCARGOT_OUTPUT=bin -DVENDORTEST=1 -GNinja
        - ninja -Cout/linux/x64/release
        - cp ./out/linux/x64/release/escargot ./escargot
        - travis_wait 30 tools/run-tests.py --arch=x86_64 jetstream-only-simple chakracore
        - tools/run-tests.py --arch=x86_64 jetstream-only-cdjs sunspider-js internal octane jsc-stress v8 spidermonkey regression-tests es2015 intl
        - tools/run-tests.py --arch=x86_64 test262


    - name: "linux.x64.debug"
      addons:
        apt:
          packages: [ autoconf, automake, libtool, ninja-build, libicu-dev ]
      script:
        - cmake -H. -Bout/linux/x64/debug -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x64 -DESCARGOT_MODE=debug -DESCARGOT_OUTPUT=bin -GNinja
        - ninja -Cout/linux/x64/debug
        - cp ./out/linux/x64/debug/escargot ./escargot
        - tools/run-tests.py --arch=x86_64 jetstream-only-cdjs sunspider-js internal regression-tests es2015 intl
        - travis_wait 30 tools/run-tests.py --arch=x86_64 test262

    - name: "linux.x86.release"
      addons:
        apt:
          packages: [ autoconf, automake, libtool, ninja-build, gcc-multilib g++-multilib, "libicu-dev:i386", npm ]
      install:
        - npm install
      script:
        - cmake -H. -Bout/linux/x86/release -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x86 -DESCARGOT_MODE=release -DESCARGOT_OUTPUT=bin -DVENDORTEST=1 -GNinja
        - ninja -Cout/linux/x86/release
        - cp ./out/linux/x86/release/escargot ./escargot
        - travis_wait 30 tools/run-tests.py --arch=x86 jetstream-only-simple chakracore
        - tools/run-tests.py --arch=x86 jetstream-only-cdjs sunspider-js internal octane jsc-stress v8 spidermonkey regression-tests es2015 intl test262
        - tools/run-tests.py --arch=x86 test262

    - name: "linux.x86.debug"
      addons:
        apt:
          packages: [ autoconf, automake, libtool, ninja-build, gcc-multilib g++-multilib, "libicu-dev:i386" ]
      script:
        - cmake -H. -Bout/linux/x86/debug -DESCARGOT_HOST=linux -DESCARGOT_ARCH=x86 -DESCARGOT_MODE=debug -DESCARGOT_OUTPUT=bin -GNinja
        - ninja -Cout/linux/x86/debug
        - cp ./out/linux/x86/debug/escargot ./escargot
        - tools/run-tests.py --arch=x86 jetstream-only-cdjs sunspider-js internal regression-tests es2015 intl
        - travis_wait 40 tools/run-tests.py --arch=x86 test262

    - name: "SonarQube"
      addons:
        apt:
          packages: [ autoconf, automake, libtool, ninja-build, libicu-dev ]
        sonarcloud:
          organization: "lws-project"
      cache:
        directories:
          - '$HOME/.sonar/cache'
      script:
        - ./tools/check_sonarqube.sh

  allow_failures:
    - name: "darwin.x64.release"
    - name: "SonarQube"

  fast_finish: true
